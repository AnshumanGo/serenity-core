ext {
    bintrayPackage = 'serenity-spring'
    projectDescription = 'Serenity Spring integration'
}

dependencies {
    implementation project(':serenity-core')
    implementation project(':serenity-junit')
    implementation "junit:junit:${junitVersion}"
    implementation ("org.springframework:spring-test:${springVersion}")
    implementation ("org.springframework:spring-context:${springVersion}")
    implementation ("org.springframework:spring-context-support:${springVersion}")

    // Unit testing
    testImplementation "org.springframework:spring-jdbc:${springVersion}"
    testImplementation "org.springframework:spring-aop:${springVersion}"
    testImplementation "org.springframework:spring-orm:${springVersion}"
    testImplementation("org.springframework.boot:spring-boot-test:${springBootVersion}") {
        exclude group:'org.springframework', module:'spring-context'
        exclude group:'org.springframework', module:'spring-core'
    }
    testImplementation 'commons-dbcp:commons-dbcp:1.4'
    testImplementation 'javax.annotation:javax.annotation-api:1.3.2'
    testImplementation ("org.hibernate:hibernate-entitymanager:5.2.12.Final") {
        exclude group: 'commons-logging'
        exclude group: 'org.javassist'
        exclude group: 'org.slf4j'
        exclude group: 'net.bytebuddy'
        exclude group: 'org.jboss.logging'
        exclude group: 'com.fasterxml', module:'classmate'
    }
    testImplementation("org.spockframework:spock-core:${spockVersion}") {
        exclude group: "org.junit.platform"
    }
    implementation "org.opentest4j:opentest4j:1.2.0"
}

test {
	if (excludes.contains('**/integration/**')) {
		excludes -= '**/integration/**'
		exclude {
			FileTreeElement elem -> elem.path.contains('/integration/') && !elem.path.contains('/junit/spring/integration/')
		}
	}
	else {
		throw new GradleException("The root build.gradle has been modified and has broken serenity-spring's build.gradle. Please modify serenity-spring's build.gradle.")
	}
}

integrationTests {
	exclude '**/junit/spring/integration/**'
}
